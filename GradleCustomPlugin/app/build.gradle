apply plugin: 'com.android.application'

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        applicationId "com.example.oleg.gradlecustomplugin"
        minSdkVersion 15
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    productFlavors {
        free
        paid
    }

    project.afterEvaluate {
        productFlavors.each { flavour ->
                def taskDisplayRevisionDynamic = "displayRevisionFoR${flavour.name}"

                project.task(taskDisplayRevisionDynamic) << {
                    println "commit=${getCommit()}"
                    println "author=${getAuthor()}"
                }

                project.tasks.find { task ->
                    def pattern = ~/(?i)merge${flavour.name}.*Assets/
                    pattern.matcher(task.name).matches()
                }.dependsOn taskDisplayRevisionDynamic
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.0.0'
}

///////////////////////////
//      PLUGIN CODE      //
///////////////////////////

def getCommit () {
    "git rev-parse HEAD".execute().text.trim()
}

def getAuthor () {
    "git log --format=%an -n 1 HEAD".execute().text.trim()
}
